/*
 * Copyright 2014 Alessandro Falappa <alex.falappa@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gui.panels;

import gov.nasa.worldwind.WorldWindow;
import gov.nasa.worldwind.layers.Layer;
import gov.nasa.worldwind.layers.LayerList;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.JCheckBox;

/**
 *
 * @author Alessandro Falappa <alex.falappa@gmail.com>
 */
public class ViewSettingsPanel extends javax.swing.JPanel {

    public ViewSettingsPanel() {
        initComponents();
    }

    public void linkTo(WorldWindow wwd) {
        LayerList layers = wwd.getModel().getLayers();
        Layer layer = layers.getLayerByName("Footprints");
        link(chFootprints, wwd, layer);
        layer = layers.getLayerByName("Area of interest");
        link(chAoi, wwd, layer);
        layer = layers.getLayerByName("Scale bar");
        link(chScale, wwd, layer);
        layer = layers.getLayerByName("Compass");
        link(chCompass, wwd, layer);
        layer = layers.getLayerByName("World Map");
        link(chMiniMap, wwd, layer);
        layer = layers.getLayerByName("View Controls");
        link(chViewContrl, wwd, layer);
        layer = layers.getLayerByName("Lat-Lon Graticule");
        link(chGraticule, wwd, layer);
        layer = layers.getLayerByName("Place Names");
        link(chPlaceNames, wwd, layer);
        layer = layers.getLayerByName("Political Boundaries");
        link(chBoundaries, wwd, layer);
        layer = layers.getLayerByName("NASA Blue Marble Image");
        link(chBMImage, wwd, layer);
        layer = layers.getLayerByName("Blue Marble (WMS) 2004");
        link(chBMWMS, wwd, layer);
        layer = layers.getLayerByName("MS Virtual Earth Aerial");
        link(chMsVirtEarth, wwd, layer);
        layer = layers.getLayerByName("Bing Imagery");
        link(chBing, wwd, layer);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        chAoi = new javax.swing.JCheckBox();
        chFootprints = new javax.swing.JCheckBox();
        chPlaceNames = new javax.swing.JCheckBox();
        chBoundaries = new javax.swing.JCheckBox();
        chBMImage = new javax.swing.JCheckBox();
        chBMWMS = new javax.swing.JCheckBox();
        chMsVirtEarth = new javax.swing.JCheckBox();
        chBing = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        chMiniMap = new javax.swing.JCheckBox();
        chCompass = new javax.swing.JCheckBox();
        chScale = new javax.swing.JCheckBox();
        chViewContrl = new javax.swing.JCheckBox();
        chGraticule = new javax.swing.JCheckBox();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Layers"));

        chAoi.setText("Area of Interest");

        chFootprints.setText("Footprints");

        chPlaceNames.setText("Place Names");

        chBoundaries.setText("Political Boundaries");

        chBMImage.setText("BlueMarble Image");

        chBMWMS.setText("BlueMarble WMS");

        chMsVirtEarth.setText("MS Virtual Earth");

        chBing.setText("Bing");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chAoi)
                    .addComponent(chFootprints)
                    .addComponent(chBMImage)
                    .addComponent(chBMWMS)
                    .addComponent(chMsVirtEarth)
                    .addComponent(chBoundaries)
                    .addComponent(chPlaceNames)
                    .addComponent(chBing))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chAoi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chFootprints)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chPlaceNames)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chBoundaries)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chBMImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chBMWMS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chMsVirtEarth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chBing)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Visual aids"));

        chMiniMap.setText("World Map");

        chCompass.setText("Compass");

        chScale.setText("Scale");

        chViewContrl.setText("View Controls");

        chGraticule.setText("Graticule");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chCompass)
                    .addComponent(chScale)
                    .addComponent(chViewContrl)
                    .addComponent(chGraticule)
                    .addComponent(chMiniMap))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chMiniMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCompass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chScale)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chViewContrl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chGraticule)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chAoi;
    private javax.swing.JCheckBox chBMImage;
    private javax.swing.JCheckBox chBMWMS;
    private javax.swing.JCheckBox chBing;
    private javax.swing.JCheckBox chBoundaries;
    private javax.swing.JCheckBox chCompass;
    private javax.swing.JCheckBox chFootprints;
    private javax.swing.JCheckBox chGraticule;
    private javax.swing.JCheckBox chMiniMap;
    private javax.swing.JCheckBox chMsVirtEarth;
    private javax.swing.JCheckBox chPlaceNames;
    private javax.swing.JCheckBox chScale;
    private javax.swing.JCheckBox chViewContrl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void link(JCheckBox jcb, WorldWindow wwd, Layer layer) {
        if (layer != null) {
            jcb.setSelected(layer.isEnabled());
            jcb.setAction(new ToggleAction(layer, wwd));
        } else {
            jcb.setEnabled(false);
        }
    }

    private class ToggleAction extends AbstractAction {

        private final WorldWindow wwd;
        private final Layer layer;

        public ToggleAction(Layer layer, WorldWindow wwd) {
            super(layer.getName());
            this.wwd = wwd;
            this.layer = layer;
        }

        @Override
        public void actionPerformed(ActionEvent actionEvent) {
            boolean toggle = ((JCheckBox) actionEvent.getSource()).isSelected();
            this.layer.setEnabled(toggle);
            wwd.redraw();
        }
    }
}
